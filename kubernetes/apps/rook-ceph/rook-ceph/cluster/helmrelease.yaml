---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  chart:
    spec:
      chart: rook-ceph-cluster
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
      version: v1.15.6
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: volsync-system
  install:
    remediation:
      retries: 3
  interval: 30m
  timeout: 15m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          allowVolumeExpansion: true
          enabled: true
          isDefault: true
          name: ceph-block
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            imageFormat: '2'
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
    cephBlockPoolsVolumeSnapshotClass:
      deletionPolicy: Delete
      enabled: true
      isDefault: false
      name: csi-ceph-blockpool
    cephClusterSpec:
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
        ssl: false
        urlPrefix: /
      mgr:
        modules:
          - enabled: true
            name: pg_autoscaler
      network:
        connections:
          requireMsgr2: true
        provider: host
      placement:
        mgr: &ref_0
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mon: *ref_0
        # osd:
        #   nodeAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #       nodeSelectorTerms:
        #         - matchExpressions:
        #             - key: node-role.kubernetes.io/control-plane
        #               operator: Exists
      # resources:
      #   mon:
      #     requests:
      #       cpu: 50m
      #       memory: 512Mi
      #   osd:
      #     requests:
      #       cpu: 300m
      #       memory: 512Mi
      storage:
        config:
          osdsPerDevice: '1'
        deviceFilter: nvme0n1
        useAllDevices: true
        useAllNodes: true
    cephFileSystemVolumeSnapshotClass:
      deletionPolicy: Delete
      enabled: true
      isDefault: false
      name: csi-ceph-filesystem
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          dataPools:
            - failureDomain: host
              name: data0
              replicated:
                size: 3
          metadataPool:
            replicated:
              size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            placement:
              topologySpreadConstraints:
                - labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: ceph-filesystem
                  maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
            priorityClassName: system-cluster-critical
            resources:
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 1Gi
        storageClass:
          allowVolumeExpansion: true
          enabled: true
          isDefault: false
          name: ceph-filesystem
          parameters:
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          pool: data0
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
    cephObjectStores:
      - ingress:
          annotations:
            external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
            nginx.ingress.kubernetes.io/proxy-body-size: '0'
            nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
          enabled: true
          host:
            name: rgw.${SECRET_DOMAIN}
            path: /
          ingressClassName: internal
        name: ceph-objectstore
        spec:
          dataPool:
            erasureCoded:
              codingChunks: 1
              dataChunks: 2
            failureDomain: host
          gateway:
            hostNetwork: false
            instances: 2
            port: 80
            priorityClassName: system-cluster-critical
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 1Gi
          healthCheck:
            bucket:
              interval: 60s
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          preservePoolsOnDelete: true
        storageClass:
          enabled: true
          name: ceph-bucket
          parameters:
            region: us-west-1
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
    configOverride: |
      [global]
      osd_class_update_on_start = false
    ingress:
      dashboard:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        host:
          name: rook.${SECRET_DOMAIN}
          path: /
        ingressClassName: internal
    monitoring:
      createPrometheusRules: true
      enabled: true
    toolbox:
      enabled: true
