---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  chart:
    spec:
      chart: grafana
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      version: 8.10.3
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    admin:
      existingSecret: grafana-admin-secret
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - disableDeletion: false
            editable: true
            folder: ''
            name: default
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
    dashboards:
      default:
        apc-ups:
          datasource: Prometheus
          # renovate: depName="APC UPS (SNMP)"
          gnetId: 12340
          revision: 1
        ceph-cluster:
          datasource: Prometheus
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
        ceph-osd:
          datasource: Prometheus
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
        ceph-pools:
          datasource: Prometheus
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
        cert-manager:
          datasource: Prometheus
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
        cloudflared:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
        external-dns:
          datasource: Prometheus
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
        external-secrets:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
        flux-cluster:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
        flux-control-plane:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
        kubernetes-api-server:
          datasource: Prometheus
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
        kubernetes-coredns:
          datasource: Prometheus
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
        kubernetes-global:
          datasource: Prometheus
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
        kubernetes-namespaces:
          datasource: Prometheus
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
        kubernetes-nodes:
          datasource: Prometheus
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 34
        kubernetes-pods:
          datasource: Prometheus
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
        kubernetes-volumes:
          datasource: Prometheus
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
        miniflux:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
        nginx:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        nginx-request-handling-performance:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
        node-exporter-full:
          datasource: Prometheus
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
        node-feature-discovery:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
        prometheus:
          datasource: Prometheus
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
        smartctl-exporter:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
        unifi-insights:
          datasource: Prometheus
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
        unifi-network-sites:
          datasource: Prometheus
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
        unifi-uap:
          datasource: Prometheus
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
        unifi-usw:
          datasource: Prometheus
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
        unpackerr:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
          # renovate: depName="Unpackerr"
          gnetId: 18817
          revision: 1
        volsync:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_REPLICATIONDESTNAME
              value: .*-dst
          # renovate: depName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
        zfs:
          datasource: Prometheus
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: true
            name: Prometheus
            type: prometheus
            uid: prometheus
            url: http://prometheus-operated.observability.svc.cluster.local:9090
          - access: proxy
            jsonData:
              maxLines: 250
            name: Loki
            type: loki
            uid: loki
            url: http://loki-headless.observability.svc.cluster.local:3100
          - access: proxy
            jsonData:
              implementation: prometheus
            name: Alertmanager
            type: alertmanager
            uid: alertmanager
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Loki
            orgId: 1
          - name: Prometheus
            orgId: 1
    deploymentStrategy:
      type: Recreate
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
    grafana.ini:
      analytics:
        check_for_plugin_updates: false
        check_for_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      news:
        news_feed_enabled: false
    ingress:
      annotations:
        external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        gethomepage.dev/description: Monitoring Dashboards
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: Observability
        gethomepage.dev/icon: grafana.png
        gethomepage.dev/name: Grafana
      enabled: true
      hosts:
        - "{{ .Release.Name }}.${SECRET_DOMAIN}"
      ingressClassName: internal
    persistence:
      enabled: false
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    sidecar:
      dashboards:
        enabled: true
        folderAnnotation: grafana_folder
        label: grafana_dashboard
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
        searchNamespace: ALL
      datasources:
        enabled: true
        labelValue: ''
        searchNamespace: ALL
    testFramework:
      enabled: false
